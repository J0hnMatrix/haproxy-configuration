global
	log /dev/log	local0
	log /dev/log	local1 notice
	# chroot /var/lib/haproxy
	# stats socket /run/haproxy/admin.sock mode 660 level admin
	# stats timeout 30s
	# user haproxy
	# group haproxy
	daemon
	maxconn 2048
	tune.ssl.default-dh-param 4096

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	# https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# http://www.mattzuba.com/2015/07/hardening-haproxy-for-an-a-rating/
	## Test your config with https://www.ssllabs.com/ssltest/
	## and https://observatory.mozilla.org/

	# Ciphers for TLS v1.2
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	
	# Ciphers for TLS v1.3
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# Ciphers for TLS v1.2
	ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	
	# Ciphers for TLS v1.3
	ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
	log     global
	option  httplog
	option  dontlognull
	mode    http
	option  httpchk
	option	forwardfor except 127.0.0.1
	option	http-keep-alive
	timeout connect 10s
	timeout client  30s
	timeout server  30s
	# errorfile 400 /etc/haproxy/errors/400.http
	# errorfile 403 /etc/haproxy/errors/403.http
	# errorfile 408 /etc/haproxy/errors/408.http
	# errorfile 500 /etc/haproxy/errors/500.http
	# errorfile 502 /etc/haproxy/errors/502.http
	# errorfile 503 /etc/haproxy/errors/503.http
	# errorfile 504 /etc/haproxy/errors/504.http
	maxconn 30

	# compression algo gzip
	# compression type text/html text/plain text/css text/javascript


frontend http-in
	bind *:80

	# Prevent DDoS
	stick-table type ip size 100k expire 30s store http_req_rate(10s)
	http-request track-sc0 src
	http-request deny deny_status 429 if { sc_http_req_rate(0) gt 20 }

	# Redirect http trafic to https
	redirect scheme https if !{ ssl_fc }

	# Redirect to default backend
	# default_backend error

frontend https-in
	bind *:443 ssl alpn http/1.1 crt /etc/haproxy/certs/your.key.pem ecdhe secp384r1
	http-response replace-header Location ^http://(.*)$	https://\1

	#http-request set-header X-Forwarded-Proto https
	#http-request set-header X-Forwarded-Port 443
	#http-request set-header X-Forwarded-For %[src]
	#capture request header X-Forwarded-For len 15

	## Secure headers https://blog.devcloud.hosting/securing-haproxy-and-nginx-via-http-headers-54020d460283
	## Test your config with https://securityheaders.com/
	## and https://observatory.mozilla.org/

	http-response set-header X-XSS-Protection 1;mode=block
	
	# Disabled for Synology SRM
	http-response set-header X-Content-Type-Options nosniff
	
	http-response set-header Referrer-Policy no-referrer-when-downgrade
	http-response set-header X-Frame-Options SAMEORIGIN
	http-response del-header X-Powered-By
	http-response del-header Server
	http-response del-header X-Apache-Server-ID
	#http-response set-header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self'; font-src 'self'; object-src 'self'; media-src 'self'; child-src 'self'; sandbox 'self'; report-uri 'self'; form-action 'self'; frame-ancestors 'self'"
	#http-response set-header Feature-Policy "geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'none'; payment 'none'"

# This line is for HSTS:
	http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload;"


# Define hosts
	use_backend	custom1-backend if { hdr_beg(Host) -i custom1.  }
	use_backend     pihole-backend if { path_beg /pihole }


# Define backends

# Standard backend
backend custom1-backend
	server hostname				<ip-addr>:<port>/<suffix>

# This backend is for Pihole as an example
backend pihole-backend
	http-request replace-uri ^/<your-suffix>/(.*) /admin/\1
	server hostname		<ip-addr>:<port>/admin

